var _user$project$Main$websocketLocation = 'ws://localhost:3030';
var _user$project$Main$encodeOSCArg = function (arg) {
	var _p0 = arg;
	if (_p0.ctor === 'OSCFloat') {
		return _elm_lang$core$Basics$toString(_p0._0);
	} else {
		return _p0._0;
	}
};
var _user$project$Main$encodeOSCMessage = function (_p1) {
	var _p2 = _p1;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_p2.address,
		A2(
			_elm_lang$core$Basics_ops['++'],
			',',
			A3(
				_elm_lang$core$List$foldr,
				function (_p3) {
					return F2(
						function (x, y) {
							return A2(_elm_lang$core$Basics_ops['++'], x, y);
						})(
						_user$project$Main$encodeOSCArg(_p3));
				},
				'',
				_p2.args)));
};
var _user$project$Main$OSCMessage = F2(
	function (a, b) {
		return {address: a, args: b};
	});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {sentMessages: a, receivedMessages: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(
		_user$project$Main$Model,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[])),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$OSCString = function (a) {
	return {ctor: 'OSCString', _0: a};
};
var _user$project$Main$OSCFloat = function (a) {
	return {ctor: 'OSCFloat', _0: a};
};
var _user$project$Main$decodeOSCArg = _elm_lang$core$Json_Decode$oneOf(
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_elm_lang$core$Json_Decode$map, _user$project$Main$OSCFloat, _elm_lang$core$Json_Decode$float),
			A2(_elm_lang$core$Json_Decode$map, _user$project$Main$OSCString, _elm_lang$core$Json_Decode$string)
		]));
var _user$project$Main$decodeOSCMessage = A2(
	_elm_lang$core$Json_Decode$customDecoder,
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value),
	function (jsonList) {
		var _p4 = jsonList;
		if (_p4.ctor === '::') {
			return A3(
				_elm_lang$core$Result$map2,
				_user$project$Main$OSCMessage,
				A2(_elm_lang$core$Json_Decode$decodeValue, _elm_lang$core$Json_Decode$string, _p4._0),
				A3(
					_elm_lang$core$List$foldr,
					_elm_lang$core$Result$map2(
						F2(
							function (x, y) {
								return A2(_elm_lang$core$List_ops['::'], x, y);
							})),
					_elm_lang$core$Result$Ok(
						_elm_lang$core$Native_List.fromArray(
							[])),
					A2(
						_elm_lang$core$List$map,
						_elm_lang$core$Json_Decode$decodeValue(_user$project$Main$decodeOSCArg),
						_p4._1)));
		} else {
			return _elm_lang$core$Result$Err('Expecting at least an address');
		}
	});
var _user$project$Main$update = F2(
	function (msg, _p5) {
		var _p6 = _p5;
		var _p10 = _p6.sentMessages;
		var _p9 = _p6.receivedMessages;
		var _p7 = msg;
		if (_p7.ctor === 'Send') {
			var _p8 = _p7._0;
			return {
				ctor: '_Tuple2',
				_0: A2(
					_user$project$Main$Model,
					A2(_elm_lang$core$List_ops['::'], _p8, _p10),
					_p9),
				_1: A2(
					_elm_lang$websocket$WebSocket$send,
					_user$project$Main$websocketLocation,
					_user$project$Main$encodeOSCMessage(_p8))
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: A2(
					_user$project$Main$Model,
					_p10,
					A2(
						_elm_lang$core$List_ops['::'],
						A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$decodeOSCMessage, _p7._0),
						_p9)),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$NewMessage = function (a) {
	return {ctor: 'NewMessage', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$websocket$WebSocket$listen, _user$project$Main$websocketLocation, _user$project$Main$NewMessage);
};
var _user$project$Main$Send = function (a) {
	return {ctor: 'Send', _0: a};
};
var _user$project$Main$sendDefaultMessage = _user$project$Main$Send(
	A2(
		_user$project$Main$OSCMessage,
		'/test',
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$OSCString('one'),
				_user$project$Main$OSCFloat(1)
			])));
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$sendDefaultMessage)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Send')
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
